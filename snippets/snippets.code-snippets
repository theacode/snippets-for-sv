{
	"ibm_svc_auth": {
	  "prefix": "ibm_svc_auth_snippet",
	  "description": "generates an authentication token for a user on IBM Spectrum Virtualize Family storage system. The token is used to make REST API calls to the storage system.",
	  "body": [
		"ibm_svc_auth:",
		"  clustername: string # required. The hostname or management IP of the Spectrum Virtualize storage system.",
		"  domain: string # not required. Domain for the Spectrum Virtualize storage system.",
		"  username: string # not required. REST API username for the Spectrum Virtualize storage system.",
		"  password: string # not required. REST API password for the Spectrum Virtualize storage system.",
		"  token: string # not required. The authentication token to verify a user on the Spectrum Virtualize storage system. To generate a token, use ibm_svc_auth module.",
		"  log_path: string # not required. Path of debug log file.",
		"  validate_certs: boolean #Choices:[no, yes] Validates certification."
	  ]
	},
	"ibm_svc_host": {
		"prefix": "ibm_svc_host_snippet",
		"description": "Ansible interface to manage 'mkhost' and 'rmhost' host commands.",
		"body": [
			"ibm_svc_host:",
			"  clustername: string #required The hostname or management IP of the Spectrum Virtualize storage system.",
			"  domain: string #Domain for the Spectrum Virtualize storage system.",
			"  fcwwpn: string #List of Initiator WWPNs to be added to the host. The complete list of WWPNs must be provided.",
			"  hostcluster: string #Specifies the name of the host cluster to which the host object is to be added. A host cluster must exist before a host object can be added to it.",
			"  iogrp: string #Specifies a set of one or more input/output (I/O) groups from which the host can access the volumes.",
			"  iscsiname: string #Initiator IQN to be added to the host.",
			"  log_path: string #Path of debug log file.",
			"  name: string  #required Specifies a name or label for the new host object.",
			"  nohostcluster: boolean #Choices:[no, yes] If specified True, host object is removed from the host cluster.",
			"  password: string #REST API password for the Spectrum Virtualize storage system. The parameters 'username' and 'password' are required if not using 'token' to authenticate a user.",
			"  protocol: string #Specifies the protocol used by the host to communicate with the storage system. Only 'scsi' protocol is supported.",
			"  site: string #Specifies the site name of the host.",
			"  state: string #required Choices: [absent, present] Creates (present) or removes (absent) a host.",
			"  token: string #The authentication token to verify a user on the Spectrum Virtualize storage system. To generate a token, use ibm_svc_auth module.",
			"  type: string #Specifies the type of host.",
			"  username: string #REST API username for the Spectrum Virtualize storage system. The parameters 'username' and 'password' are required if not using 'token' to authenticate a user.",
			"  validate_certs: boolean #Choices:[no, yes] Validates certification."
		]
	},
	"ibm_svc_hostcluster": {
		"prefix": "ibm_svc_hostcluster_snippet",
		"description": "Ansible interface to manage 'mkhostcluster' and 'rmhostcluster' host commands.",
		"body": [
			"ibm_svc_hostcluster:",
			"  clustername: string #required The hostname or management IP of the Spectrum Virtualize storage system.",
			"  domain: string #Domain for the Spectrum Virtualize storage system.",
			"  log_path: string #Path of debug log file.",
			"  name: string # requiredSpecifies a name or label for the new host cluster object.",
			"  ownershipgroup: string #The name of the ownership group to which the host cluster object is being added.",
			"  password: string #REST API password for the Spectrum Virtualize storage system. The parameters 'username' and 'password' are required if not using 'token' to authenticate a user.",
			"  removeallhosts: boolean #Choices: no yes Specifies that all hosts in the host cluster and the associated host cluster object be deleted.",
			"  state: string #required Choices: [absent, present] Creates (present) or removes (absent) a host cluster.",
			"  token: string #The authentication token to verify a user on the Spectrum Virtualize storage system. To generate a token, use ibm_svc_auth module.",
			"  username: string #REST API username for the Spectrum Virtualize storage system. The parameters 'username' and 'password' are required if not using 'token' to authenticate a user.",
			"  validate_certs: boolean #Choices: [no, yes] Validates certification."
		]
	},
	" ibm_svc_info": {
		"prefix": "ibm_svc_info_snippet",
		"description": "Gathers the list of specified IBM Spectrum Virtualize Family storage system entities. These include the list of nodes, pools, volumes, hosts, host clusters, FC ports, iSCSI ports, target port FC, FC consistgrp, vdiskcopy, I/O groups, FC map, FC connectivity, NVMe fabric, array, and system.",
		"body": [
			"ibm_svc_info:",
			"  clustername: string #required The hostname or management IP of the Spectrum Virtualize storage system.",
			"  domain: string #Domain for the Spectrum Virtualize storage system.",
			"  gather_subset: list/elements #Choices:   vol, pool, node, iog, host, hc, fcport, iscsiport, fc, fcmap, fcconsistgrp, rcrelationship, rcconsistgrp, vdiskcopy, targetportfc, array ,system, all",
			"  log_path: string #Path of debug log file.",
			"  objectname: string # required If specified, only the instance with the 'objectname' will be returned. If not specified, all the instances will be returned.",
			"  password: string #REST API password for the Spectrum Virtualize storage system. The parameters 'username' and 'password' are required if not using 'token' to authenticate a user.",
			"  token: string #The authentication token to verify a user on the Spectrum Virtualize storage system. To generate a token, use ibm_svc_auth module.",
			"  username: string #REST API username for the Spectrum Virtualize storage system. The parameters 'username' and 'password' are required if not using 'token' to authenticate a user.",
			"  validate_certs: boolean #Choices: [no, yes] Validates certification."
		]
	},
	"ibm_svc_manage_consistgrp_flashcopy": {
		"prefix": "ibm_svc_manage_consistgrp_flashcopy_snippet",
		"description": "Ansible interface to manage 'mkfcconsistgrp' and 'rmfcconsistgrp' volume commands.",
		"body": [
			"ibm_svc_manage_consistgrp_flashcopy:",
			"  clustername: string #required The hostname or management IP of the Spectrum Virtualize storage system.",
			"  domain: string #Domain for the Spectrum Virtualize storage system.",
			"  force: boolean #Choices: [no, yes]. Specifies that all associated mappings be changed to stand-alone mappings. ",
			"  log_path: string #Path of debug log file.",
			"  name: string # required Specifies the name of the FlashCopy consistency group.",
			"  noownershipgroup: boolean #Choices [no, yes]. Removes the consistency group from all associated ownership groups.",
			"  ownershipgroup: string #Specifies the name of the ownership group.",
			"  password: string #REST API password for the Spectrum Virtualize storage system. The parameters 'username' and 'password' are required if not using 'token' to authenticate a user.",
			"  state: string #required Choices: [absent, present] Creates (present) or removes (absent) a FlashCopy consistency group. Used to prestart, start or stop a FlashCopy consistency group.",
			"  token: string #The authentication token to verify a user on the Spectrum Virtualize storage system. To generate a token, use ibm_svc_auth module.",
			"  username: string #REST API username for the Spectrum Virtualize storage system. The parameters 'username' and 'password' are required if not using 'token' to authenticate a user.",
			"  validate_certs: boolean #Choices: [no, yes] Validates certification."
		]
	  },
	  "ibm_svc_manage_cv": {
		"prefix": "ibm_svc_manage_cv_snippet",
		"description": "Ansible interface to manage the change volume in remote copy replication on IBM Spectrum Virtualize Family storage systems.",
		"body": [
			"ibm_svc_manage_cv:",
			"  basevolume: string Specifies the base volume name (master or auxiliary). Mandatory for creating the change volume.",
			"  clustername: string #required The hostname or management IP of the Spectrum Virtualize storage system.",
			"  cvname: string #required Specifies the name to assign to the master or auxiliary change volume.",
			"  domain: string #Domain for the Spectrum Virtualize storage system.",
			"  ismaster: boolean #Choices: no yes ‚Üê Specifies whether the change volume is being (dis)associated with master cluster.",
			"  log_path: string #Path of debug log file.",
			"  password: string #REST API password for the Spectrum Virtualize storage system. The parameters 'username' and 'password' are required if not using 'token' to authenticate a user.",
			"  rname: string #required Specifies the name of the remote copy relationship.",
			"  state: string #required Choices: [absent, present] Creates (present) or removes (absent) a change volume. ",
			"  token: string #The authentication token to verify a user on the Spectrum Virtualize storage system. To generate a token, use ibm_svc_auth module.",
			"  username: string #REST API username for the Spectrum Virtualize storage system. The parameters 'username' and 'password' are required if not using 'token' to authenticate a user.",
			"  validate_certs: boolean #Choices: [no, yes] Validates certification."
		]
	  },
	  "ibm_svc_manage_flashcopy": {
		"prefix": "ibm_svc_manage_flashcopy_snippet",
		"description": "Ansible interface to manage 'mkfcmap', 'rmfcmap' and 'chfcmap' volume commands.",
		"body": [
			"ibm_svc_manage_flashcopy:",
			"  clustername: string #required The hostname or management IP of the Spectrum Virtualize storage system.",
			"  consistgrp: string #Specifies the name of the consistency group.",
			"  copyrate: string #Specifies the copy rate. The rate varies between 0-150. If unspecified, the default copy rate is 50 for clone and 0 for snapshot.",
			"  copytype: string #Choices: snapshot, clone. Specifies the copy type when creating the FlashCopy mapping.",
			"  domain: string #Domain for the Spectrum Virtualize storage system.",
			"  force: boolean #Choices: [no, yes]. Brings the target volume online. This parameter is required if the FlashCopy mapping is in the stopped state.",
			"  grainsize: string #Specifies the grain size for the mapping. The grainsize can be set to 64 or 256. If unspecified, the default value of 256 is set.",
			"  log_path: string #Path of debug log file.",
			"  mdiskgrp: string #Specifies the name of the storage pool to use when creating a volume.",
			"  name: string #Required Specifies the name of the FlashCopy mapping.",
			"  noconsistgrp: boolean #Choices: [no, yes]. Specifies the name of the consistency group.",
			"  password: string #REST API password for the Spectrum Virtualize storage system. The parameters 'username' and 'password' are required if not using 'token' to authenticate a user.",
			"  source: string #Specifies the name of the source volume.",
			"  state: string #required Choices: [absent, present]. Creates (present) or removes (absent) a FlashCopy mapping. ",
			"  target: string #Specifies the name of the target volume.",
			"  token: string #The authentication token to verify a user on the Spectrum Virtualize storage system. To generate a token, use ibm_svc_auth module.",
			"  username: string #REST API username for the Spectrum Virtualize storage system. The parameters 'username' and 'password' are required if not using 'token' to authenticate a user.",
			"  validate_certs: boolean #Choices: [no, yes] Validates certification."
		]
	  },
	  "ibm_svc_manage_mirrored_volume": {
		"prefix": "ibm_svc_manage_mirrored_volume_snippet",
		"description": "Ansible interface to manage 'mkvolume', 'addvolumecopy', 'rmvolumecopy' and 'rmvolume' volume commands.",
		"body": [
			"ibm_svc_manage_mirrored_volume:",
			"  clustername: string #required The hostname or management IP of the Spectrum Virtualize storage system.",
			"  compressed: boolean #Choices: [no, yes]. Specifies if the volume to be created is compressed.",
			"  deduplicated: boolean #Choices: [no, yes]. Specifies if the volume to be created is deduplicated.",
			"  domain: string #Domain for the Spectrum Virtualize storage system.",
			"  grainsize: string #Specifies the grain size (in KB) to use when creating the HyperSwap volume.",
			"  log_path: string #Path of debug log file.",
			"  name: string #Required Specifies the name to assign to the new volume.",
			"  password: string #REST API password for the Spectrum Virtualize storage system. The parameters 'username' and 'password' are required if not using 'token' to authenticate a user.",
			"  poolA: string #Specifies the name of first storage pool to be used when creating a mirrored volume.",
			"  poolB: string #Specifies the name of second storage pool to be used when creating a mirrored volume.",
			"  rsize: string #Specifies the rsize (buffersize) in %. Defines how much physical space is initially allocated to the thin-provisioned or compressed volume.",
			"  size: string #Specifies the size of mirrored volume in MB. This can also be used to resize a mirrored volume. When resizing, only mandatory parameters can be passed.",
			"  state: string #required Choices: [absent, present]. Creates (present) or removes (absent) a mirrored volume. ",
			"  thin: boolean #Choices: [no, yes]. Specifies if the volume to be created is thin-provisioned.",
			"  token: string #The authentication token to verify a user on the Spectrum Virtualize storage system. To generate a token, use ibm_svc_auth module.",
			"  type: boolean #Choices: local hyperswap, standard. Specifies the desired volume type. When the type is 'local hyperswap', a HyperSwap volume gets created. When the type is 'standard' and values for 'PoolA' and 'PoolB' are also specified, a 'standard mirror' volume gets created. If a 'standard' mirrored volume exists and either 'PoolA' or 'PoolB' is specified, the mirrored volume gets converted to a standard volume.",
			"  username: string #REST API username for the Spectrum Virtualize storage system. The parameters 'username' and 'password' are required if not using 'token' to authenticate a user.",
			"  validate_certs: boolean #Choices: [no, yes] Validates certification."
		]
	  },
	  "ibm_svc_manage_replication": {
		"prefix": "ibm_svc_manage_replication_snippet",
		"description": "This module manages remote copies (or rcrelationship) on IBM Spectrum Virtualize Family storage systems.",
		"body": [
		  "ibm_svc_manage_replication:",
		  "  name: string # required. Specifies the name to assign to the new remote copy relationship or to operate on the existing remote copy.",
		  "  clustername: string # required. The hostname or management IP of the Spectrum Virtualize storage system.",
		  "  domain: string #Domain for the Spectrum Virtualize storage system.",
		  "  username: string #REST API username for the Spectrum Virtualize storage system.",
		  "  password: string #REST API password for the Spectrum Virtualize storage system.",
		  "  token: string #The authentication token to verify a user on the Spectrum Virtualize storage system. To generate a token, use ibm_svc_auth module.",
		  "  copytype: string #Choices: [metro, global, GMCV] Specifies the mirror type of the remote copy. 'metro' means MetroMirror, 'global' means GlobalMirror and 'GMCV' means GlobalMirror with change volume. If not specified, a MetroMirror remote copy will be created when creating a remote copy (state='present').",
		  "  master: string #Specifies the master volume name when creating a remote copy.",
		  "  aux: string #Specifies the auxiliary volume name when creating a remote copy.",
		  "  cyclingperiod: integer # not required. Specifies the cycle period in seconds. The default cycle is of 300 seconds.",
		  "  remotecluster: string #Specifies the name of remote cluster when creating a remote copy.",
		  "  state: string #required Choices: [absent, present]. Creates or updates (C(present)), removes (C(absent)) a remote copy relationship.",
		  "  sync: boolean # choices: [True,  False] Specifies whether to create a synchronized relationship.",
		  "  force: boolean # Choices: [True,  False] Specifies that the relationship must be deleted even if it results in the secondary volume containing inconsistent data.",
		  "  consistgrp: string #Specifies a consistency group that this relationship will join.",
		  "  noconsistgrp: boolean #Choices: [True,  False]. Specifies whether to remove the specified relationship from a consistency group",
		  "  log_path: string # not required. Path of debug log file.",
		  "  validate_certs: boolean #Choices: [no, yes] Validates certification."
		]
	  },
	  "ibm_svc_manage_replicationgroup": {
		"prefix": "ibm_svc_manage_replicationgroup_snippet",
		"description": "Ansible interface to manage 'mkrcconsistgrp', 'chrcconsistgrp' and 'rmrcconsistgrp' remote copy consistency group commands.",
		"body": [
			"ibm_svc_manage_replicationgroup:",
			"  clustername: string #required The hostname or management IP of the Spectrum Virtualize storage system.",
			"  copytype: string #Choices: [metro, global, GMCV] #Specifies the mirror type of the remote copy. 'metro' means MetroMirror, 'global' means GlobalMirror and 'GMCV' means GlobalMirror with change volume. If not specified, a MetroMirror remote copy will be created when creating a remote copy (state='present').",
			"  cyclingmode: string #Choices: [multi, none]. Specifies the behavior of Global Mirror for the relationship. Active-active relationships and relationships with cycling modes set to Multiple must always be configured with change volumes.",
			"  cyclingperiod: integer #Specifies the cycle period in seconds.",
			"  domain: string #Domain for the Spectrum Virtualize storage system.",
			"  force: boolean #Choices: [no, yes] If used to delete a consistency group, it specifies that you want the system to remove any relationship that belongs to the consistency group before the group is deleted. If used to start a consistency group, it specifies that you want the system to process the copy operation even if it causes a temporary loss of consistency during synchronization. It is required if the consistency group is in the ConsistentStopped state, but is not synchronized or is in the idling state - except if consistency protection is configured.",
			"  log_path: string #Path of debug log file.",
			"  name: string #Required Specifies the name for the new consistency group.",
			"  password: string #REST API password for the Spectrum Virtualize storage system. The parameters 'username' and 'password' are required if not using 'token' to authenticate a user.",
			"  remotecluster: string #Specifies the name of remote cluster when creating a remote copy.",
			"  state: string #required Choices: [absent, present]. Creates (present) or removes (absent) a consistency group.",
			"  token: string #The authentication token to verify a user on the Spectrum Virtualize storage system. To generate a token, use ibm_svc_auth module.",
			"  username: string #REST API username for the Spectrum Virtualize storage system. The parameters 'username' and 'password' are required if not using 'token' to authenticate a user.",
			"  validate_certs: boolean #Choices: [no, yes] Validates certification."
		]
	  },
	  "ibm_svc_mdisk": {
		"prefix": "ibm_svc_mdisk_snippet",
		"description": "Ansible interface to manage 'mkarray' and 'rmmdisk' MDisk commands.",
		"body": [
			"ibm_svc_mdisk:",
			"  clustername: string #required The hostname or management IP of the Spectrum Virtualize storage system.",
			"  domain: string #Domain for the Spectrum Virtualize storage system.",
			"  drive: string #Drive(s) to use as members of the RAID array.",
			"  encrypt: boolean #Choices: [no, yes]. Defines use of encryption with the MDisk group.",
			"  level: string #Choices: [raid0,raid1, raid5, raid6, raid10]. Specifies the RAID level.",
			"  log_path: string #Path of debug log file.",
			"  mdiskgrp: string #Required The storage pool (mdiskgrp) to which you want to add the MDisk.",
			"  name: string #Required The Mdisk name.",
			"  password: string #REST API password for the Spectrum Virtualize storage system. The parameters 'username' and 'password' are required if not using 'token' to authenticate a user.",
			"  state: string #required Choices: [absent, present]. Creates (present) or removes (absent) the Mdisk.",
			"  token: string #The authentication token to verify a user on the Spectrum Virtualize storage system. To generate a token, use ibm_svc_auth module.",
			"  username: string #REST API username for the Spectrum Virtualize storage system. The parameters 'username' and 'password' are required if not using 'token' to authenticate a user.",
			"  validate_certs: boolean #Choices: [no, yes] Validates certification."
		]
	  },
	  "ibm_svc_mdiskgrp": {
		"prefix": "ibm_svc_mdiskgrp_snippet",
		"description": "Ansible interface to manage 'mkmdiskgrp' and 'rmmdiskgrp' pool commands.",
		"body": [
			"ibm_svc_mdiskgrp:",
			"  clustername: string #required The hostname or management IP of the Spectrum Virtualize storage system.",
			"  datareduction: string Choices:yes, no. Defines use of data reduction pools (DRPs) on the MDisk group.",
			"  domain: string #Domain for the Spectrum Virtualize storage system.",
			"  easytier: string Choices: [on, off, auto]. Defines use of easytier with the MDisk group.",
			"  encrypt: boolean #Choices: [no, yes]. Defines use of encryption with the MDisk group.",
			"  ext: integer #Specifies the size of the extents for this group in MB.",
			"  log_path: string #Path of debug log file.",
			"  name: string #Required Specifies the name to assign to the new pool.",
			"  parentmdiskgrp: string #Parentmdiskgrp for subpool.",
			"  password: string #REST API password for the Spectrum Virtualize storage system. The parameters 'username' and 'password' are required if not using 'token' to authenticate a user.",
			"  size: integer #Required Specifies the child pool capacity. The value must be a numeric value (and an integer multiple of the extent size).",
			"  state: string #required Choices: [absent, present]. Creates (present) or removes (absent) an MDisk group.",
			"  token: string #The authentication token to verify a user on the Spectrum Virtualize storage system. To generate a token, use ibm_svc_auth module.",
			"  unit: string #Unit for subpool.",
			"  username: string #REST API username for the Spectrum Virtualize storage system. The parameters 'username' and 'password' are required if not using 'token' to authenticate a user.",
			"  validate_certs: boolean #Choices: [no, yes] Validates certification."
		]
	  },
	  "ibm_svc_start_stop_flashcopy": {
		"prefix": "ibm_svc_start_stop_flashcopy_snippet",
		"description": "Ansible interface to manage 'startfcmap', 'stopfcmap', 'startfcconsistgrp' and 'stopfcconsistgrp' commands.",
		"body": [
			"ibm_svc_start_stop_flashcopy:",
			"  clustername: string #required The hostname or management IP of the Spectrum Virtualize storage system.",
			"  domain: string #Domain for the Spectrum Virtualize storage system.",
			"  force: boolean #Choices: [no, yes]. Specifies that all processing associated with the FlashCopy mapping of a consistency group be immediately stopped.",
			"  isgroup: boolean #Choices: [no, yes]. Specifies that a consistency group has to be started or stopped.",
			"  log_path: string #Path of debug log file.",
			"  name: string #Required Specifies the name to assign to the new pool.",
			"  password: string #REST API password for the Spectrum Virtualize storage system. The parameters 'username' and 'password' are required if not using 'token' to authenticate a user.",
			"  state: string #required Choices: [absent, present]. Specifies the state of the FlashCopy mapping or FlashCopy consistency group.",
			"  token: string #The authentication token to verify a user on the Spectrum Virtualize storage system. To generate a token, use ibm_svc_auth module.",
			"  username: string #REST API username for the Spectrum Virtualize storage system. The parameters 'username' and 'password' are required if not using 'token' to authenticate a user.",
			"  validate_certs: boolean #Choices: [no, yes] Validates certification."
		]
	  },
	  "ibm_svc_start_stop_replication": {
		"prefix": "ibm_svc_start_stop_replication_snippet",
		"description": "Ansible interface to manage remote copy related commands.",
		"body": [
			"ibm_svc_start_stop_replication:",
			"  access: boolean #Choices: [no, yes]. Instructs the system to allow write access to a consistent secondary volume. Applies when state is 'stopped'.",
			"  clean: boolean #Choices: [no, yes]. Specifies that the volume that is to become a secondary is clean. Applies when state is 'started'.",
			"  clustername: string #required The hostname or management IP of the Spectrum Virtualize storage system.",
			"  domain: string #Domain for the Spectrum Virtualize storage system.",
			"  isgroup: boolean #Choices: [no, yes]. Specifies that a consistency group has to be started or stopped.",
			"  log_path: string #Path of debug log file.",
			"  name: string #Required Specifies a name to assign to the new remote copy relationship or group, or to operate on the existing remote copy.",
			"  password: string #REST API password for the Spectrum Virtualize storage system. The parameters 'username' and 'password' are required if not using 'token' to authenticate a user.",
			"  primary: string #Choices: master, aux. Specifies the copy direction by defining which disk becomes the primary (source). Applies when state is 'started'.",
			"  state: string #required Choices: [absent, present]. Starts (started), stops (stopped) a remote copy relationship.",
			"  token: string #The authentication token to verify a user on the Spectrum Virtualize storage system. To generate a token, use ibm_svc_auth module.",
			"  username: string #REST API username for the Spectrum Virtualize storage system. The parameters 'username' and 'password' are required if not using 'token' to authenticate a user.",
			"  validate_certs: boolean #Choices: [no, yes] Validates certification."
		]
	  },
	  "ibm_svc_vdisk": {
		"prefix": "ibm_svc_vdisk_snippet",
		"description": "Ansible interface to manage 'mkvdisk' and 'rmvdisk' volume commands.",
		"body": [
			"ibm_svc_vdisk:",
			"  autoexpand: boolean #Choices: [no, yes]. Specifies that thin-provisioned volume copies can automatically expand their real capacities.",
			"  clustername: string #required The hostname or management IP of the Spectrum Virtualize storage system.",
			"  domain: string #Domain for the Spectrum Virtualize storage system.",
			"  easytier: boolean #Choices: on, off. Defines use of easytier with VDisk.",
			"  log_path: string #Path of debug log file.",
			"  mdiskgrp: string #Required Specifies the name of the storage pool to use when creating this volume. This parameter is required when 'state' is 'present'.",
			"  name: string #Required Specifies the name to assign to the new volume.",
			"  password: string #REST API password for the Spectrum Virtualize storage system. The parameters 'username' and 'password' are required if not using 'token' to authenticate a user.",
			"  rsize: string #Defines how much physical space is initially allocated to the thin-provisioned volume in %. If rsize is not passed, the volume created is a standard volume.",
			"  size: string #Defines the size of VDisk. This parameter is required when 'state' is 'present'. This parameter can also be used to resize an existing VDisk.",
			"  state: string #required Choices: [absent, present]. Creates (present) or removes (absent) a volume.",
			"  token: string #The authentication token to verify a user on the Spectrum Virtualize storage system. To generate a token, use ibm_svc_auth module.",
			"  unit: string #Choices: [b, kb, mb, gb, tb, pb] Defines the size option for the storage unit. This parameter is required when 'state' is 'present'.",
			"  username: string #REST API username for the Spectrum Virtualize storage system. The parameters 'username' and 'password' are required if not using 'token' to authenticate a user.",
			"  validate_certs: boolean #Choices: [no, yes] Validates certification."
		]
	  },
	  "ibm_svc_vol_map": {
		"prefix": "ibm_svc_vol_map_snippet",
		"description": "Ansible interface to manage volume mapping commands 'mkvdiskhostmap' and 'rmvdiskhostmap' commands.",
		"body": [
			"ibm_svc_vol_map:",
			"  clustername: string #required The hostname or management IP of the Spectrum Virtualize storage system.",
			"  domain: string #Domain for the Spectrum Virtualize storage system.",
			"  host: string #Specifies the host name for host mapping.",
			"  hostcluster: string #Specifies the name of the host cluster for host mapping.",
			"  log_path: string #Path of debug log file.",
			"  name: string #Required Specifies the name to assign to the new volume.",
			"  password: string #REST API password for the Spectrum Virtualize storage system. The parameters 'username' and 'password' are required if not using 'token' to authenticate a user.",
			"  scsi: integer #Specifies the SCSI logical unit number (LUN) ID to assign to a volume on the specified host or host cluster.",
			"  state: string #required Choices: [absent, present]. Creates (present) or removes (absent) a volume mapping.",
			"  token: string #The authentication token to verify a user on the Spectrum Virtualize storage system. To generate a token, use ibm_svc_auth module.",
			"  unit: string #Choices: [b, kb, mb, gb, tb, pb] Defines the size option for the storage unit. This parameter is required when 'state' is 'present'.",
			"  username: string #REST API username for the Spectrum Virtualize storage system. The parameters 'username' and 'password' are required if not using 'token' to authenticate a user.",
			"  validate_certs: boolean #Choices: [no, yes] Validates certification.",
			"  volname: string #required Specifies the volume name for host mapping."
		]
	  },
	  "ibm_svcinfo_command": {
		"prefix": "ibm_svcinfo_command_snippet",
		"description": "Runs single svcinfo CLI command on IBM Spectrum Virtualize Family storage systems. Filter options like filtervalue or pipe '|' with grep, awk, and others are not supported in the command in this module. Paramiko must be installed to use this module.",
		"body": [
			"ibm_svcinfo_command:",
			"  clustername: string #required The hostname or management IP of the Spectrum Virtualize storage system.",
			"  command: string #Single svcinfo CLI command to be executed on Spectrum Virtualize storage system. Each command must start with svcinfo keyword.",
			"  key_filename: string #SSH client private key filename. By default, ~/.ssh/id_rsa is used.",
			"  log_path: string #Path of debug log file.",
			"  password: string #REST API password for the Spectrum Virtualize storage system. The parameters 'username' and 'password' are required if not using 'token' to authenticate a user.",
			"  username: string #REST API username for the Spectrum Virtualize storage system. The parameters 'username' and 'password' are required if not using 'token' to authenticate a user.",
			"  usesshkey: boolean #Choices: [no, yes]. For key-pair based SSH connection, set this field as 'yes'. Provide full path of keyfile in key_filename field. If not provided, default path of SSH key is used.",
		]
	  },
	  "ibm_svctask_command": {
		"prefix": "ibm_svctask_command_snippet",
		"description": "Runs svctask CLI command(s) on IBM Spectrum Virtualize Family storage systems. In case any svctask command fails while running this module, then the module stops processing further commands in the list. Paramiko must be installed to use this module.",
		"body": [
			"ibm_svctask_command:",
			"  clustername: string #required The hostname or management IP of the Spectrum Virtualize storage system.",
			"  command: string #A list containing svctask CLI commands to be executed on storage. Each command must start with svctask keyword.",
			"  key_filename: string #SSH client private key filename. By default, ~/.ssh/id_rsa is used.",
			"  log_path: string #Path of debug log file.",
			"  password: string #REST API password for the Spectrum Virtualize storage system. The parameters 'username' and 'password' are required if not using 'token' to authenticate a user.",
			"  username: string #REST API username for the Spectrum Virtualize storage system. The parameters 'username' and 'password' are required if not using 'token' to authenticate a user.",
			"  usesshkey: boolean #Choices: [no, yes]. For key-pair based SSH connection, set this field as 'yes'. Provide full path of keyfile in key_filename field. If not provided, default path of SSH key is used.",
		]
	  }
  }